# Generated by Django 5.2 on 2025-06-20 10:24

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced'), ('WIDOWED', 'Widowed')], max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=10, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('employment_type', models.CharField(blank=True, choices=[('FULL_TIME', 'Full Time'), ('PART_TIME', 'Part Time'), ('CONTRACT', 'Contract'), ('INTERN', 'Intern')], max_length=20, null=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('location_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('shift_start_time', models.TimeField(blank=True, null=True)),
                ('shift_end_time', models.TimeField(blank=True, null=True)),
                ('basic_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('tds_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('off_monday', models.BooleanField(default=False)),
                ('off_tuesday', models.BooleanField(default=False)),
                ('off_wednesday', models.BooleanField(default=False)),
                ('off_thursday', models.BooleanField(default=False)),
                ('off_friday', models.BooleanField(default=False)),
                ('off_saturday', models.BooleanField(default=False)),
                ('off_sunday', models.BooleanField(default=True)),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ot_charge_per_hour', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Organization/Company name', max_length=255)),
                ('subdomain', models.CharField(help_text='Unique subdomain identifier', max_length=100, unique=True)),
                ('custom_domain', models.CharField(blank=True, help_text='Custom domain if any', max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('max_employees', models.IntegerField(default=1000, help_text='Maximum number of employees allowed')),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('plan', models.CharField(choices=[('free', 'Free'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='free', max_length=50)),
            ],
            options={
                'verbose_name': 'tenant',
                'verbose_name_plural': 'tenants',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view', models.BooleanField(default=True, help_text='Can view data and reports')),
                ('can_modify', models.BooleanField(default=False, help_text='Can modify data and settings')),
                ('can_invite_users', models.BooleanField(default=False, help_text='Can invite new team members')),
                ('can_manage_payroll', models.BooleanField(default=False, help_text='Can manage payroll data')),
                ('can_export_data', models.BooleanField(default=False, help_text='Can export company data')),
            ],
            options={
                'db_table': 'user_permissions',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text="User's email address", max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('hr_manager', 'HR Manager'), ('supervisor', 'Supervisor'), ('employee', 'Employee')], default='employee', max_length=20)),
                ('is_invited', models.BooleanField(default=False, help_text='User was invited by admin')),
                ('invitation_token', models.UUIDField(blank=True, default=None, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('tenant', models.ForeignKey(blank=True, help_text='Company this user belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='excel_data.tenant')),
                ('permissions', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='excel_data.userpermissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.CharField(max_length=50)),
                ('employee_name', models.CharField(max_length=255)),
                ('payment_date', models.DateField()),
                ('net_payable', models.DecimalField(decimal_places=2, max_digits=12)),
                ('advance_deduction', models.DecimalField(decimal_places=2, max_digits=12)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=12)),
                ('pay_period', models.CharField(max_length=20)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque')], max_length=20)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='excel_data.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leave_type', models.CharField(choices=[('sick', 'Sick Leave'), ('casual', 'Casual Leave'), ('annual', 'Annual Leave'), ('maternity', 'Maternity Leave'), ('paternity', 'Paternity Leave'), ('emergency', 'Emergency Leave')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days_count', models.IntegerField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaves', to='excel_data.employeeprofile')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='excel_data.tenant')),
            ],
            options={
                'db_table': 'leaves',
                'ordering': ['-applied_date'],
            },
        ),
        migrations.AddField(
            model_name='employeeprofile',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='excel_data.tenant'),
        ),
        migrations.CreateModel(
            name='AdvanceLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.CharField(max_length=50)),
                ('employee_name', models.CharField(max_length=255)),
                ('advance_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('for_month', models.CharField(max_length=20)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('REPAID', 'Repaid')], default='PENDING', max_length=20)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='excel_data.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalaryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.CharField(blank=True, max_length=20, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='NAME')),
                ('salary', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='SALARY')),
                ('absent', models.IntegerField(default=0, verbose_name='ABSENT')),
                ('days', models.IntegerField(default=0, verbose_name='DAYS')),
                ('sl_wo_ot', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='SL W/O OT')),
                ('ot', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='OT')),
                ('hour_rs', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='HOUR RS')),
                ('charges', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='CHARGES')),
                ('late', models.IntegerField(default=0, verbose_name='LATE')),
                ('charge', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='CHARGE')),
                ('amt', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='AMT')),
                ('sal_ot', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='SAL+OT')),
                ('adv_25th', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='25TH ADV')),
                ('old_adv', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='OLD ADV')),
                ('nett_payable', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='NETT PAYABLE')),
                ('department', models.CharField(max_length=100, verbose_name='Department')),
                ('total_old_adv', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total old ADV')),
                ('balnce_adv', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Balnce Adv')),
                ('incentive', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='INCENTIVE')),
                ('tds', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='TDS')),
                ('sal_tds', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='SAL-TDS')),
                ('advance', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='ADVANCE')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='excel_data.tenant')),
            ],
            options={
                'ordering': ['-year', '-month', 'name'],
                'unique_together': {('tenant', 'employee_id', 'year', 'month')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='employeeprofile',
            unique_together={('tenant', 'employee_id')},
        ),
        migrations.CreateModel(
            name='DailyAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.CharField(db_index=True, max_length=50)),
                ('employee_name', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('employment_type', models.CharField(max_length=50)),
                ('attendance_status', models.CharField(choices=[('PRESENT', 'Present'), ('ABSENT', 'Absent'), ('HALF_DAY', 'Half Day'), ('PAID_LEAVE', 'Paid Leave')], max_length=10)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('check_in', models.TimeField(blank=True, null=True)),
                ('check_out', models.TimeField(blank=True, null=True)),
                ('working_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('time_status', models.CharField(blank=True, choices=[('ON_TIME', 'On Time'), ('LATE', 'Late')], max_length=10, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='excel_data.tenant')),
            ],
            options={
                'ordering': ['-date', 'employee_name'],
                'unique_together': {('tenant', 'employee_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.CharField(db_index=True, max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('calendar_days', models.IntegerField(default=0, help_text='Total calendar days in the month')),
                ('total_working_days', models.IntegerField(default=0, help_text='Total working days excluding holidays and weekends')),
                ('present_days', models.IntegerField(default=0)),
                ('absent_days', models.IntegerField(default=0)),
                ('ot_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('late_minutes', models.IntegerField(default=0)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='excel_data.tenant')),
            ],
            options={
                'ordering': ['-date', 'name'],
                'unique_together': {('tenant', 'employee_id', 'date')},
            },
        ),
    ]
